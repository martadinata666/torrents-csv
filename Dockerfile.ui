# UI Dist
FROM --platform=${BUILDPLATFORM} dessalines/torrents-csv-ui-perseus as dist

# Builder
FROM --platform=${BUILDPLATFORM} martadinata666/rust:latest as builder
ENV CARGO_NET_GIT_FETCH_WITH_CLI=true
ENV CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
#ENV RUSTFLAGS="-Ctarget-feature=+crt-static"

WORKDIR /app
COPY . .
ARG TARGETPLATFORM
# Disable optimization, a bit larger file but doesn't wait 80mnutes
USER root
RUN echo "[profile.release]\nopt-level = 0\ndebug = false\nsplit-debuginfo = '...'  # Platform-specific.\ndebug-assertions = false\noverflow-checks = false\nlto = false\npanic = 'unwind'\nincremental = false\ncodegen-units = 16\nrpath = false" >> Cargo.toml
RUN cat Cargo.toml
RUN case ${TARGETPLATFORM} in \
         "linux/amd64")  CARGO_BUILD_TARGET=x86_64-unknown-linux-gnu  ;; \
         "linux/arm64")  CARGO_BUILD_TARGET=aarch64-unknown-linux-gnu  ;; \
    esac \ 
    && cargo build --release --target=$CARGO_BUILD_TARGET && \
    ls target && \
    mkdir ./pkg && \
    cp target/$CARGO_BUILD_TARGET/release/torrents-csv-ui-perseus ./pkg/server;

# The runner debian
FROM debian:sid-slim
# Copy resources
COPY --from=builder /app/pkg /app/
COPY --from=dist /app/dist /app/dist
RUN ls /app/server
EXPOSE 8080
CMD ["/app/server"]
