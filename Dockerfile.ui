FROM node AS node
# Install upx
RUN apt update && apt install -y upx-ucl git
RUN git clone --depth=1 https://git.torrents-csv.com/heretic/torrents-csv-leptos /build/leptos
WORKDIR /build/leptos

# Enable corepack to use pnpm
RUN corepack enable

# Cache deps
#COPY package.json pnpm-lock.yaml ./
RUN pnpm i

FROM rustlang/rust:nightly-bullseye AS builder
RUN apt update && apt install -y curl wget

# Install cargo-binstall, which makes it easier to install other
# cargo extensions like cargo-leptos

# Get cargo
RUN case ${TARGETPLATFORM} in \
         "linux/amd64")  CARGO_BUILD_TARGET=x86_64-unknown-linux-musl  ;; \
         "linux/arm64")  CARGO_BUILD_TARGET=aarch64-unknown-linux-musl  ;; \
    esac \ &&
    curl -L https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-$CARGO_BUILD_TARGET.tgz -o cargo-binstall.tgz && \
    tar -xvf cargo-binstall.tgz && \
    cp cargo-binstall /usr/local/cargo/bin

# Install cargo-leptos
RUN cargo binstall cargo-leptos -y

# Add the targets
RUN rustup target add wasm32-unknown-unknown

# Copy the data from node
COPY --from=node /build/leptos /build
WORKDIR /build

# Copy the node_modules for daisyui, and the node binary
COPY --from=node /build/node_modules ./node_modules
COPY --from=node /usr/local/bin /usr/local/bin

# Build the release
ENV LEPTOS_TAILWIND_VERSION v3.3.6
ENV LEPTOS_WASM_OPT_VERSION version_119
RUN cargo leptos build --release

# Compress with upx
RUN upx --best --lzma /build/target/release/tcl


# The runner debian
FROM debian:sid-slim
# Copy resources
# Create a new user perseus
ARG UID=1000
ARG GID=1000
ARG USER=torrents-csv
RUN groupadd --gid $GID $USER
RUN useradd --system --create-home --shell /bin/bash --uid $UID --gid $GID $USER

COPY --from=builder /build/target/release/tcl /app/
COPY --from=builder /build/target/site /app/site

ENV APP_ENVIRONMENT "production"
ENV LEPTOS_SITE_ROOT "/app/site"
ENV LEPTOS_SITE_ADDR "0.0.0.0:3000"
EXPOSE 3000
USER $USER
CMD ["/app/tcl"]
